# https://notes.billmill.org/programming/observable_framework/github_workflow_for_publishing_an_observable_framework.html
name: Publish
on:
  workflow_dispatch:
  push:
    branches: ["main"]
permissions:
  contents: read
jobs:
  build:
    concurrency: ci-${{ github.ref }} # Recommended if you intend to make multiple deployments in quick succession.
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install yq
        run: pipx install yq==3.2.3

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build
        env:
          # Needed to query GitHub API with authenticated access (higher rate limit)
          # All data is publicly accessible, so contents:read permissions are sufficient
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write
      contents: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

    # TODO: publish a copy of the artifact to a GitHub Release too?
    #
    # It may be desirable to get the old version of JSON generated by the data
    # loaders, but this is currently only stored in an ephemeral Actions
    # artifact that will expire. (It is not possible to access data from old
    # Pages deployments.)
